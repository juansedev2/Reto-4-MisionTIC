/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package interfaz;

import controlador.CuerpoDeAguaDTO;
import controlador.TipoAguaDTO;
import controlador.TipoCuerpoAguaDTO;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author Juan Sebastian
 */
public final class ViewPanelConsulta extends javax.swing.JFrame {

    // Atributos de la clase
    private ArrayList<String> lista_tipos_cuerpos_agua;
    private ArrayList<String> lista_tipos_agua;
    private String cadena_datos;
    private String auxiliar;

    /**
     * Creates new form ViewPanelConsulta
     */
    public ViewPanelConsulta() {
        this.lista_tipos_cuerpos_agua = new ArrayList();
        this.lista_tipos_agua = new ArrayList();
        initComponents();
        bloquearTodos();
        definirCajasOpciones();
        bloquearEditarYEliminar();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jTextField8 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jComboBox2 = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("PANEL DE CONSULTA, ACTUALIZACIÓN Y ELIMINACIÓN");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("id del tipo de cuerpo de agua (actual)");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("id del tipo de agua (actual)");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Nombre");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("Municipio");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setText("Numero de clasificacion");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel7.setText("id del cuerpo de agua");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel8.setText("Clasificación IRCA");

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        jTextField7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField7ActionPerformed(evt);
            }
        });

        jButton1.setText("CONSULTAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextField8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField8ActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel9.setText("Digita acá el id del cuerpo de agua para consultar");

        jButton2.setText("ACTUALIZAR");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("ELIMINAR");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jButton1)
                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(1120, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jTextField4)
                        .addComponent(jTextField1)
                        .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel4))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addGap(269, 269, 269))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(193, 193, 193)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel5)
                                        .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addGap(156, 156, 156)
                                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(193, 193, 193)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1))))
                        .addGap(12, 12, 12)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBox2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(jLabel3)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jButton3)
                                .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(98, 98, 98)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel7)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addGap(34, 34, 34)
                        .addComponent(jLabel2)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel8))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(49, 49, 49)
                .addComponent(jLabel9)
                .addGap(30, 30, 30)
                .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addContainerGap(66, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField8ActionPerformed
        // CAMPO DE BÚSQUEDA DE ID PARA BUSCAR CUERPO DE AGUA ESPECÍFICO
    }//GEN-LAST:event_jTextField8ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // Campo del id del cuerpo de agua
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField7ActionPerformed
        // Campo de clasificación IRCA textual
    }//GEN-LAST:event_jTextField7ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // CAJA DE OPCIONES DE COMBOBOX 1

    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // CAMPO DEL ID DEL TIPO DE CUERPO DE AGUA
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // CAMPO DEL ID DEL TIPO DE AGUA
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // BOTÓN PARA SOLICITAR LA CONSULTA
        if (jTextField8.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "POR FAVOR DIGITE UN ID PARA BUSCAR");
        } else {
            CuerpoDeAguaDTO controlador = new CuerpoDeAguaDTO();
            ArrayList<String> lista_datos = new ArrayList();
            lista_datos = controlador.devolverEspecifico(String.valueOf(jTextField8.getText()));
            if (lista_datos.isEmpty() || lista_datos == null) {
                JOptionPane.showMessageDialog(rootPane, "CUERPO DE AGUA NO ENCONTRADO");
                bloquearEditarYEliminar();
            } else {
                definirCamposConsulta(lista_datos);
                desbloquearEditarYEliminar();
                desbloquearEditables();
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // BOTÓN DE ACTUALIZAR
        if(jComboBox1.getSelectedItem().equals("---") || jComboBox2.getSelectedItem().equals("---")){
            JOptionPane.showMessageDialog(rootPane, "SELECCIONE LOS ID CORRESPINDIENTES");
        }else{
            
            if(obtenerConfirmacion()){
            CuerpoDeAguaDTO controlador = new CuerpoDeAguaDTO();
            obtenerDatosCamposConsulta();
            controlador.setCadena_datos_entrada(this.cadena_datos);
            controlador.getCuerpo_de_agua_DAO().setCadena_datos_entrada(this.cadena_datos);
            if(controlador.getCuerpo_de_agua_DAO().actualizar()){
                JOptionPane.showMessageDialog(rootPane, "ACTUALIZADO");
            }else{
                JOptionPane.showMessageDialog(rootPane, "NO SE PUDO ACTUALIZAR");   
            }
        }else{
            JOptionPane.showMessageDialog(rootPane, "CANCELADO");
        }
        }
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // BOTÓN DE ELIMINAR
        if(obtenerConfirmacion()){
            vaciarEspacios();
            CuerpoDeAguaDTO controlador = new CuerpoDeAguaDTO();
            controlador.setCadena_datos_entrada(this.auxiliar);
            controlador.getCuerpo_de_agua_DAO().setCadena_datos_entrada(this.auxiliar);
            if(controlador.getCuerpo_de_agua_DAO().eliminar()){
                vaciarEspacios();
                bloquearTodos();
                vaciarEspacios();
                bloquearEditarYEliminar();
                this.auxiliar = "";
                JOptionPane.showMessageDialog(rootPane, "ELIMINADO");
            }else{
                JOptionPane.showMessageDialog(rootPane, "NO SE PUDO ELIMINAR");   
            }
            
        }else{
            JOptionPane.showMessageDialog(rootPane, "CANCELADO");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    // Método para mostrar alerta de confirmacion
    private boolean obtenerConfirmacion(){
        String botones [] = {"Confirmar", "Cancelar"};
        int eleccion = JOptionPane.showOptionDialog(rootPane, "¿Desea confirmar la operación", "ADVERTENCIA", 
                0, 0, null, botones, this);
        return eleccion == JOptionPane.YES_OPTION;
    }
    // Método para bloquear los campos que el usuario no podrá modificar por nada
    private void bloquearImportantes() {
        jTextField1.setEditable(false);  // Campo del id del cuerpo de agua
        jTextField7.setEditable(false);  // Campo del id del tipo de cuerpo de agua
        jTextField2.setEditable(false);  // Campo del id del tipo de agua
        jTextField3.setEditable(false);  // Campo de la clasificacion IRCA Actual
    }

    // Método para bloquear todos los campos
    private void bloquearTodos() {
        jTextField1.setEditable(false);  // Campo del id del cuerpo de agua
        jTextField2.setEditable(false);  // Campo del id del tipo de cuerpo de agua
        jTextField3.setEditable(false);  // Campo del id del tipo de agua
        jTextField4.setEditable(false);  // Campo del nombre
        jTextField5.setEditable(false);  // Campo del municipio 
        jTextField6.setEditable(false);  // Campo del número de clasificación
        jTextField7.setEditable(false);  // Campo de la clasificación IRCA textual
    }

    // Método para desbloquear los campos editables luego de consulta para poder editarlos
    public void desbloquearEditables() {
        jTextField2.setEditable(false);  // Campo del id del tipo de cuerpo de agua
        jTextField3.setEditable(false);  // Campo del id del tipo de agua
        jTextField4.setEditable(true);  // Campo del nombre
        jTextField5.setEditable(true);  // Campo del municipio 
        jTextField6.setEditable(true);  // Campo del número de clasificación
    }
    
    // Función para vaciar los espacios
    public void vaciarEspacios(){
        jTextField1.setText("");  // Campo del id del cuerpo de agua
        jTextField2.setText("");  // Campo del id del tipo de cuerpo de agua
        jTextField3.setText("");  // Campo del id del tipo de agua
        jTextField4.setText(""); // Campo del nombre
        jTextField5.setText("");  // Campo del municipio 
        jTextField6.setText("");  // Campo del número de clasificación
        jTextField7.setText("");  // Campo de la clasificación IRCA textual
        
    }

    // Función para definir las cajas de opciones
    public void definirCajasOpciones() {
        // CAJA DE OPCIONES DE COMBOBOX 1
        // DEBO OBTENER LAS OPCIONES DE LOS TIPOS DE CUERPOS DE AGUA
        TipoCuerpoAguaDTO controladorTipoCuerpo = new TipoCuerpoAguaDTO();
        TipoAguaDTO controladorTipoAgua = new TipoAguaDTO();
        String defecto = "---";
        jComboBox1.addItem(defecto);
        jComboBox2.addItem(defecto);

        // Añadir opciones para los tipos de cuerpos de agua
        ArrayList<String> opciones = controladorTipoCuerpo.devolverTodos();
        for (String op : opciones) {
            jComboBox2.addItem(op);
            this.lista_tipos_cuerpos_agua.add(op);
        }
        // Añadir opciones para los tipos  de agua
        opciones = controladorTipoAgua.devolverTodos();
        for (String op : opciones) {
            jComboBox1.addItem(op);
            this.lista_tipos_agua.add(op);
        }
    }

    // Método para definir los campos al momento de obtener los datos de una consulta
    private void definirCamposConsulta(ArrayList<String> lista_datos) {

        int contador = 1;
        for (String datos : lista_datos) {
            switch (contador) {
                case 1 -> {
                     jTextField1.setText(datos);
                     this.auxiliar =  jTextField1.getText();
                     System.out.println("El valor del auxiliar es: " + this.auxiliar);
                }
                case 2 -> {
                    jTextField2.setText(datos);
                }
                case 3 -> {
                    jTextField3.setText(datos);
                }
                case 4 -> {
                    jTextField4.setText(datos);
                }
                case 5 -> {
                    jTextField5.setText(datos);
                }
                case 6 -> {
                    jTextField6.setText(datos);
                }
                case 7 -> {
                    jTextField7.setText(datos);
                }
                default -> {
                    System.out.println("Ok");
                }      
            }
            contador++;
        }
    }
    
     // Método para obtener los datos de los campos al momento de obtener los datos de actualizar
    private void obtenerDatosCamposConsulta() {
        
        this.cadena_datos = "";

        int contador = 1;
        while(contador <= 6){
            switch (contador) {
                case 1 -> {
                    if(jComboBox1.getSelectedItem().equals("Laguna")){
                        this.cadena_datos  = "1";  // Obtener el id del cuerpo de agua
                    }else{
                        this.cadena_datos =  "2";  // Obtener el id del cuerpo de agua
                    }
                }
                case 2 -> {
                    if(jComboBox2.getSelectedItem().equals("Dulce")){
                        this.cadena_datos += " " + "1";   // Obtener el id del tipo de agua
                    }else{
                        this.cadena_datos += " " + "2";  // Obtener el id del tipo de agua
                    }
                }
                case 3 -> {
                    this.cadena_datos += " " +  jTextField4.getText();
                }
                case 4 -> {
                    this.cadena_datos += " " +  jTextField5.getText();
                }
                case 5 -> {
                    this.cadena_datos += " " +  jTextField6.getText();  
                }
                case 6 -> {
                    this.cadena_datos += " " +  jTextField1.getText(); 
                }
                default -> {
                    System.out.println("Ok");
                }      
            }
            
            contador++;
        }
         System.out.println("Cadena de datos final:");
         System.out.println(this.cadena_datos);
    }
    
    private void bloquearEditarYEliminar(){
        jButton2.setEnabled(false);
        jButton3.setEnabled(false);
    }
    private void desbloquearEditarYEliminar(){
        jButton2.setEnabled(true);
        jButton3.setEnabled(true);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewPanelConsulta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewPanelConsulta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewPanelConsulta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewPanelConsulta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewPanelConsulta().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    // End of variables declaration//GEN-END:variables
}
