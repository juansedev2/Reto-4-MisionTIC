/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package interfaz;

import controlador.CuerpoDeAguaDTO;
import controlador.TipoAguaDTO;
import controlador.TipoCuerpoAguaDTO;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author Juan Sebastian
 */
public final class ViewPanelAgregar extends javax.swing.JFrame {

    // Atributos de la clase
    private ArrayList<String> lista_tipos_cuerpos_agua;
    private ArrayList<String> lista_tipos_agua;

    /**
     * Creates new form ViewPanelAgregar
     */
    public ViewPanelAgregar() {
        this.lista_tipos_cuerpos_agua = new ArrayList();
        this.lista_tipos_agua = new ArrayList();
        initComponents();
        definirCajasOpciones();
    }

    // Función para definir las cajas de opciones
    public void definirCajasOpciones() {
        // CAJA DE OPCIONES DE COMBOBOX 1
        // DEBO OBTENER LAS OPCIONES DE LOS TIPOS DE CUERPOS DE AGUA
        TipoCuerpoAguaDTO controladorTipoCuerpo = new TipoCuerpoAguaDTO();
        TipoAguaDTO controladorTipoAgua = new TipoAguaDTO();
        String defecto = "---";
        jComboBox1.addItem(defecto);
        jComboBox2.addItem(defecto);

        // Añadir opciones para los tipos de cuerpos de agua
        ArrayList<String> opciones = controladorTipoCuerpo.devolverTodos();
        for (String op : opciones) {
            jComboBox1.addItem(op);
            this.lista_tipos_cuerpos_agua.add(op);
        }
        // Añadir opciones para los tipos  de agua
        opciones = controladorTipoAgua.devolverTodos();
        for (String op : opciones) {
            jComboBox2.addItem(op);
            this.lista_tipos_agua.add(op);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jComboBox2 = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel1.setText("INSERTAR CUERPO DE AGUA");

        jLabel2.setText("TIPO DE CUERPO DE AGUA");

        jLabel3.setText("TIPO DE AGUA");

        jLabel4.setText("NOMBRE");

        jLabel5.setText("MUNICIPIO");

        jLabel6.setText("NUMERO DE CLASIFICACIÓN");

        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        jTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField4ActionPerformed(evt);
            }
        });

        jTextField5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField5ActionPerformed(evt);
            }
        });

        jButton1.setText("REGISTRAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jButton1)
                            .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jComboBox1, 0, 128, Short.MAX_VALUE)
                            .addComponent(jTextField3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(119, 119, 119))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(136, 212, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(144, 144, 144))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jLabel1)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51)
                .addComponent(jLabel6)
                .addGap(26, 26, 26)
                .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jButton1)
                .addContainerGap(145, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // CAJA DE OPCIONES DE COMBOBOX 1


    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // BOTÓN DE REGISTRAR
        // Obtenemos cada dato
        // V
        if (estanVaciosCampos()) {
            JOptionPane.showMessageDialog(rootPane, "DIGITE COMPLETAMENTE LOS CAMPOS POR FAVOR");
        } else if (!esIrcaNumero(jTextField5.getText())) {
            JOptionPane.showMessageDialog(rootPane, "EL CAMPO IRCA NO ES UN NÚMERO, POR FAVOR DIGITE NUEVAMENTE");
            jTextField5.setText("");
        } else {  // Ya tenemos todos los datos, solo falta enviarlos

            if (this.agregarCuerpo()) {
                JOptionPane.showMessageDialog(rootPane, "SE AGREGÓ UN NUEVO CUERPO DE AGUA");
                reiniciarCampos();
            } else {
                JOptionPane.showMessageDialog(rootPane, "HUBO UN ERROR AL AGREGAR UN CUERPO DE AGUA, POR FAVOR COMUNICAR EL ERRO CON LOS DESARROLLADORES");
            }

        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField4ActionPerformed

    private void jTextField5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField5ActionPerformed

    // Método para validar que nada esté vacio
    private boolean estanVaciosCampos() {

        String caja1 = (String) jComboBox1.getSelectedItem();
        String caja2 = (String) jComboBox2.getSelectedItem();
        String nombre = jTextField3.getText();
        String municipio = jTextField4.getText();
        String numero = jTextField5.getText();
        return caja1.equals("---") || caja2.equals("---") || nombre.equals("") || municipio.equals("") || numero.equals("");
    }

    // Función para reiniciar los campos
    private void reiniciarCampos() {
        jTextField3.setText("");
        jTextField4.setText("");
        jTextField5.setText("");
    }

    // Función para veriricar si el campo IRCA si es un número
    private boolean esIrcaNumero(String numero) {
        try {
            Float.parseFloat(numero);
            return true;
        } catch (NumberFormatException e) {
            System.out.println("El error fue: " + e);
            return false;
        }
    }

    private boolean agregarCuerpo() {

        // Obtengo toda la cadena de datos
        // Obtener el tipo de cuerpo de agua
        String id_tipo_cuerpo = (String) jComboBox1.getSelectedItem();
        for (int i = 0; i <= this.lista_tipos_cuerpos_agua.size(); i++) {
            String valor = this.lista_tipos_cuerpos_agua.get(i);
            if (valor.equals(id_tipo_cuerpo)) {
                id_tipo_cuerpo = String.valueOf((i + 1));  // Por empezar  desde cero
                break;
            }
        }

        // Obtener el tipo de agua
        String id_tipo_agua = (String) jComboBox2.getSelectedItem();
        for (int i = 0; i <= this.lista_tipos_agua.size(); i++) {
            String valor = this.lista_tipos_agua.get(i);
            if (valor.equals(id_tipo_agua)) {
                id_tipo_agua = String.valueOf((i + 1));  // Por empezar  desde cero
                break;
            }
        }

        // Formar la cadena de datos
        String nombre = jTextField3.getText();
        String municipio = jTextField4.getText();
        String numero_clasificacion = jTextField5.getText();
        String cadena_datos = id_tipo_cuerpo + " " + id_tipo_agua + " " + nombre + " " + municipio + " " + numero_clasificacion;
        // Llamamos al controlador
        CuerpoDeAguaDTO controlador = new CuerpoDeAguaDTO();
        controlador.setCadena_datos_entrada(cadena_datos);
        controlador.getCuerpo_de_agua_DAO().setCadena_datos_entrada(cadena_datos);
        return controlador.insertarNuevoCuerpo();

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewPanelAgregar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewPanelAgregar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewPanelAgregar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewPanelAgregar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewPanelAgregar().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    // End of variables declaration//GEN-END:variables
}
